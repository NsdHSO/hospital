//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "ambulance_car_details_make_enum"
)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum AmbulanceCarDetailsMakeEnum {
    #[sea_orm(string_value = "Mercedes-Benz")]
    MercedesBenz,
    #[sea_orm(string_value = "Ford")]
    Ford,
    #[sea_orm(string_value = "Chevrolet")]
    Chevrolet,
    #[sea_orm(string_value = "Toyota")]
    Toyota,
    #[sea_orm(string_value = "Volkswagen")]
    Volkswagen,
    #[sea_orm(string_value = "Ram")]
    Ram,
    #[sea_orm(string_value = "Nissan")]
    Nissan,
    #[sea_orm(string_value = "Peugeot")]
    Peugeot,
    #[sea_orm(string_value = "Fiat")]
    Fiat,
    #[sea_orm(string_value = "Iveco")]
    Iveco,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "ambulance_car_details_model_enum"
)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum AmbulanceCarDetailsModelEnum {
    #[sea_orm(string_value = "Sprinter")]
    Sprinter,
    #[sea_orm(string_value = "Transit")]
    Transit,
    #[sea_orm(string_value = "Express")]
    Express,
    #[sea_orm(string_value = "HiAce")]
    HiAce,
    #[sea_orm(string_value = "Crafter")]
    Crafter,
    #[sea_orm(string_value = "ProMaster")]
    ProMaster,
    #[sea_orm(string_value = "NV350")]
    Nv350,
    #[sea_orm(string_value = "Boxer")]
    Boxer,
    #[sea_orm(string_value = "Ducato")]
    Ducato,
    #[sea_orm(string_value = "Daily")]
    Daily,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "ambulance_status_enum"
)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum AmbulanceStatusEnum {
    #[sea_orm(string_value = "AVAILABLE")]
    Available,
    #[sea_orm(string_value = "IN_SERVICE")]
    InService,
    #[sea_orm(string_value = "MAINTENANCE")]
    Maintenance,
    #[sea_orm(string_value = "DISPATCHED")]
    Dispatched,
    #[sea_orm(string_value = "EN_ROUTE_TO_SCENE")]
    EnRouteToScene,
    #[sea_orm(string_value = "AT_SCENE")]
    AtScene,
    #[sea_orm(string_value = "TRANSPORTING_PATIENT")]
    TransportingPatient,
    #[sea_orm(string_value = "EN_ROUTE_TO_HOSPITAL")]
    EnRouteToHospital,
    #[sea_orm(string_value = "AT_HOSPITAL")]
    AtHospital,
    #[sea_orm(string_value = "RETURNING_TO_BASE")]
    ReturningToBase,
    #[sea_orm(string_value = "UNAVAILABLE")]
    Unavailable,
    #[sea_orm(string_value = "OUT_OF_SERVICE")]
    OutOfService,
    #[sea_orm(string_value = "ON_BREAK")]
    OnBreak,
    #[sea_orm(string_value = "FUELING")]
    Fueling,
    #[sea_orm(string_value = "CLEANING")]
    Cleaning,
    #[sea_orm(string_value = "AWAITING_DISPATCH")]
    AwaitingDispatch,
    #[sea_orm(string_value = "PREPARING_FOR_MISSION")]
    PreparingForMission,
    #[sea_orm(string_value = "UNDER_REPAIR")]
    UnderRepair,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "ambulance_type_enum"
)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum AmbulanceTypeEnum {
    #[sea_orm(string_value = "BASIC_LIFE_SUPPORT")]
    BasicLifeSupport,
    #[sea_orm(string_value = "ADVANCED_LIFE_SUPPORT")]
    AdvancedLifeSupport,
    #[sea_orm(string_value = "MOBILE_INTENSIVE_CARE_UNIT")]
    MobileIntensiveCareUnit,
    #[sea_orm(string_value = "PEDIATRIC_AMBULANCE")]
    PediatricAmbulance,
    #[sea_orm(string_value = "NEONATAL_AMBULANCE")]
    NeonatalAmbulance,
    #[sea_orm(string_value = "RESCUE_AMBULANCE")]
    RescueAmbulance,
    #[sea_orm(string_value = "BARIATRIC_AMBULANCE")]
    BariatricAmbulance,
    #[sea_orm(string_value = "WHEELCHAIR_VAN")]
    WheelchairVan,
    #[sea_orm(string_value = "AMBULATORY_TRANSPORT")]
    AmbulatoryTransport,
    #[sea_orm(string_value = "PSYCHIATRIC_TRANSPORT")]
    PsychiatricTransport,
    #[sea_orm(string_value = "LONG_DISTANCE_TRANSPORT")]
    LongDistanceTransport,
    #[sea_orm(string_value = "AIR_AMBULANCE")]
    AirAmbulance,
    #[sea_orm(string_value = "WATER_AMBULANCE")]
    WaterAmbulance,
    #[sea_orm(string_value = "HAZMAT_AMBULANCE")]
    HazmatAmbulance,
    #[sea_orm(string_value = "EVENT_MEDICAL_SERVICES")]
    EventMedicalServices,
    #[sea_orm(string_value = "CRITICAL_CARE_TRANSPORT")]
    CriticalCareTransport,
    #[sea_orm(string_value = "RAPID_RESPONSE_VEHICLE")]
    RapidResponseVehicle,
    #[sea_orm(string_value = "SUPERVISOR_VEHICLE")]
    SupervisorVehicle,
    #[sea_orm(string_value = "UTILITY_VEHICLE")]
    UtilityVehicle,
    #[sea_orm(string_value = "COMMAND_VEHICLE")]
    CommandVehicle,
    #[sea_orm(string_value = "TRAINING_AMBULANCE")]
    TrainingAmbulance,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "amenities_name_enum"
)]
pub enum AmenitiesNameEnum {
    #[sea_orm(string_value = "TV")]
    Tv,
    #[sea_orm(string_value = "WIFI")]
    Wifi,
    #[sea_orm(string_value = "BATHROOM")]
    Bathroom,
    #[sea_orm(string_value = "FRIDGE")]
    Fridge,
    #[sea_orm(string_value = "MICROWAVE")]
    Microwave,
    #[sea_orm(string_value = "COFFEE_MAKER")]
    CoffeeMaker,
    #[sea_orm(string_value = "SOFA")]
    Sofa,
    #[sea_orm(string_value = "DESK")]
    Desk,
    #[sea_orm(string_value = "BALCONY")]
    Balcony,
    #[sea_orm(string_value = "VIEW")]
    View,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "appointment_status_enum"
)]
pub enum AppointmentStatusEnum {
    #[sea_orm(string_value = "SCHEDULED")]
    Scheduled,
    #[sea_orm(string_value = "CONFIRMED")]
    Confirmed,
    #[sea_orm(string_value = "COMPLETED")]
    Completed,
    #[sea_orm(string_value = "CANCELLED")]
    Cancelled,
    #[sea_orm(string_value = "NO_SHOW")]
    NoShow,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "bed_type_enum")]
pub enum BedTypeEnum {
    #[sea_orm(string_value = "SINGLE")]
    Single,
    #[sea_orm(string_value = "DOUBLE")]
    Double,
    #[sea_orm(string_value = "KING")]
    King,
    #[sea_orm(string_value = "QUEEN")]
    Queen,
    #[sea_orm(string_value = "BUNK")]
    Bunk,
    #[sea_orm(string_value = "CRIB")]
    Crib,
    #[sea_orm(string_value = "HOSPITAL")]
    Hospital,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "bill_status_enum")]
pub enum BillStatusEnum {
    #[sea_orm(string_value = "PENDING")]
    Pending,
    #[sea_orm(string_value = "PARTIAL")]
    Partial,
    #[sea_orm(string_value = "COMPLETED")]
    Completed,
    #[sea_orm(string_value = "REFUNDED")]
    Refunded,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "card_cardtype_enum")]
pub enum CardTypeEnum {
    #[sea_orm(string_value = "text")]
    Text,
    #[sea_orm(string_value = "chart")]
    Chart,
    #[sea_orm(string_value = "table")]
    Table,
    #[sea_orm(string_value = "image")]
    Image,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "card_size_enum")]
pub enum CardSizeEnum {
    #[sea_orm(string_value = "small")]
    Small,
    #[sea_orm(string_value = "medium")]
    Medium,
    #[sea_orm(string_value = "large")]
    Large,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "department_name_enum"
)]
pub enum DepartmentNameEnum {
    #[sea_orm(string_value = "CARDIOLOGY")]
    Cardiology,
    #[sea_orm(string_value = "ONCOLOGY")]
    Oncology,
    #[sea_orm(string_value = "NEUROLOGY")]
    Neurology,
    #[sea_orm(string_value = "PEDIATRICS")]
    Pediatrics,
    #[sea_orm(string_value = "SURGERY")]
    Surgery,
    #[sea_orm(string_value = "INTERNAL_MEDICINE")]
    InternalMedicine,
    #[sea_orm(string_value = "OBSTETRICS_GYNECOLOGY")]
    ObstetricsGynecology,
    #[sea_orm(string_value = "OPHTHALMOLOGY")]
    Ophthalmology,
    #[sea_orm(string_value = "DERMATOLOGY")]
    Dermatology,
    #[sea_orm(string_value = "UROLOGY")]
    Urology,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "emergency_incidenttype_enum"
)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum EmergencyIncidentEnum {
    #[sea_orm(string_value = "CAR_ACCIDENT")]
    CarAccident,
    #[sea_orm(string_value = "MOTORCYCLE_ACCIDENT")]
    MotorcycleAccident,
    #[sea_orm(string_value = "PEDESTRIAN_ACCIDENT")]
    PedestrianAccident,
    #[sea_orm(string_value = "TRAIN_ACCIDENT")]
    TrainAccident,
    #[sea_orm(string_value = "AIRPLANE_CRASH")]
    AirplaneCrash,
    #[sea_orm(string_value = "SHIP_ACCIDENT")]
    ShipAccident,
    #[sea_orm(string_value = "HEART_ATTACK")]
    HeartAttack,
    #[sea_orm(string_value = "STROKE")]
    Stroke,
    #[sea_orm(string_value = "SEIZURE")]
    Seizure,
    #[sea_orm(string_value = "DIABETIC_EMERGENCY")]
    DiabeticEmergency,
    #[sea_orm(string_value = "ALLERGIC_REACTION")]
    AllergicReaction,
    #[sea_orm(string_value = "BREATHING_PROBLEM")]
    BreathingProblem,
    #[sea_orm(string_value = "SEVERE_BURNS")]
    SevereBurns,
    #[sea_orm(string_value = "ELECTROCUTION")]
    Electrocution,
    #[sea_orm(string_value = "DROWNING")]
    Drowning,
    #[sea_orm(string_value = "POISONING")]
    Poisoning,
    #[sea_orm(string_value = "FALL_INJURY")]
    FallInjury,
    #[sea_orm(string_value = "FRACTURE")]
    Fracture,
    #[sea_orm(string_value = "BLEEDING")]
    Bleeding,
    #[sea_orm(string_value = "HOUSE_FIRE")]
    HouseFire,
    #[sea_orm(string_value = "FOREST_FIRE")]
    ForestFire,
    #[sea_orm(string_value = "GAS_LEAK")]
    GasLeak,
    #[sea_orm(string_value = "EXPLOSION")]
    Explosion,
    #[sea_orm(string_value = "INDUSTRIAL_ACCIDENT")]
    IndustrialAccident,
    #[sea_orm(string_value = "EARTHQUAKE")]
    Earthquake,
    #[sea_orm(string_value = "FLOOD")]
    Flood,
    #[sea_orm(string_value = "TORNADO")]
    Tornado,
    #[sea_orm(string_value = "HURRICANE")]
    Hurricane,
    #[sea_orm(string_value = "LANDSLIDE")]
    Landslide,
    #[sea_orm(string_value = "TSUNAMI")]
    Tsunami,
    #[sea_orm(string_value = "SHOOTING")]
    Shooting,
    #[sea_orm(string_value = "STABBING")]
    Stabbing,
    #[sea_orm(string_value = "ROBBERY")]
    Robbery,
    #[sea_orm(string_value = "DOMESTIC_VIOLENCE")]
    DomesticViolence,
    #[sea_orm(string_value = "KIDNAPPING")]
    Kidnapping,
    #[sea_orm(string_value = "ASSAULT")]
    Assault,
    #[sea_orm(string_value = "HOSTAGE_SITUATION")]
    HostageSituation,
    #[sea_orm(string_value = "PANDEMIC")]
    Pandemic,
    #[sea_orm(string_value = "INFECTIOUS_DISEASE_OUTBREAK")]
    InfectiousDiseaseOutbreak,
    #[sea_orm(string_value = "BIOLOGICAL_HAZARD")]
    BiologicalHazard,
    #[sea_orm(string_value = "CHEMICAL_SPILL")]
    ChemicalSpill,
    #[sea_orm(string_value = "RADIATION_EXPOSURE")]
    RadiationExposure,
    #[sea_orm(string_value = "BUILDING_COLLAPSE")]
    BuildingCollapse,
    #[sea_orm(string_value = "BRIDGE_COLLAPSE")]
    BridgeCollapse,
    #[sea_orm(string_value = "DAM_FAILURE")]
    DamFailure,
    #[sea_orm(string_value = "UNKNOWN")]
    Unknown,
    #[sea_orm(string_value = "OTHER")]
    Other,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "emergency_severity_enum"
)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum EmergencySeverityEnum {
    #[sea_orm(string_value = "LOW")]
    Low,
    #[sea_orm(string_value = "MEDIUM")]
    Medium,
    #[sea_orm(string_value = "HIGH")]
    High,
    #[sea_orm(string_value = "CRITICAL")]
    Critical,
    #[sea_orm(string_value = "SEVERE")]
    Severe,
    #[sea_orm(string_value = "EXTREME")]
    Extreme,
    #[sea_orm(string_value = "UNKNOWN")]
    Unknown,
    #[sea_orm(string_value = "STABLE")]
    Stable,
    #[sea_orm(string_value = "UNSTABLE")]
    Unstable,
    #[sea_orm(string_value = "DECEASED")]
    Deceased,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "emergency_status_enum"
)]
pub enum EmergencyStatusEnum {
    #[sea_orm(string_value = "PENDING")]
    Pending,
    #[sea_orm(string_value = "IN_PROGRESS")]
    InProgress,
    #[sea_orm(string_value = "RESOLVED")]
    Resolved,
    #[sea_orm(string_value = "CANCELLED")]
    Cancelled,
    #[sea_orm(string_value = "ESCALATED")]
    Escalated,
    #[sea_orm(string_value = "WAITING_FOR_RESPONSE")]
    WaitingForResponse,
    #[sea_orm(string_value = "ON_HOLD")]
    OnHold,
    #[sea_orm(string_value = "FAILED")]
    Failed,
    #[sea_orm(string_value = "AT_SCENE")]
    AtScene,
    #[sea_orm(string_value = "IN_AMBULANCE")]
    InAmbulance,
    #[sea_orm(string_value = "IN_TRANSIT_TO_HOSPITAL")]
    InTransitToHospital,
    #[sea_orm(string_value = "ARRIVED_AT_HOSPITAL")]
    ArrivedAtHospital,
    #[sea_orm(string_value = "TREATED_AT_HOME")]
    TreatedAtHome,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "guard_area_enum")]
pub enum GuardAreaEnum {
    #[sea_orm(string_value = "MAIN_ENTRANCE")]
    MainEntrance,
    #[sea_orm(string_value = "ER")]
    Er,
    #[sea_orm(string_value = "ICU")]
    Icu,
    #[sea_orm(string_value = "WARDS")]
    Wards,
    #[sea_orm(string_value = "PARKING_LOT")]
    ParkingLot,
    #[sea_orm(string_value = "CAFETERIA")]
    Cafeteria,
    #[sea_orm(string_value = "PHARMACY")]
    Pharmacy,
    #[sea_orm(string_value = "HELIPAD")]
    Helipad,
    #[sea_orm(string_value = "LAB")]
    Lab,
    #[sea_orm(string_value = "RADIOLOGY")]
    Radiology,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "guard_shift_enum")]
pub enum GuardShiftEnum {
    #[sea_orm(string_value = "DAY")]
    Day,
    #[sea_orm(string_value = "NIGHT")]
    Night,
    #[sea_orm(string_value = "WEEKEND")]
    Weekend,
    #[sea_orm(string_value = "EVENING")]
    Evening,
    #[sea_orm(string_value = "MORNING")]
    Morning,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "prescription_order_status_enum"
)]
pub enum PrescriptionOrderStatusEnum {
    #[sea_orm(string_value = "PENDING")]
    Pending,
    #[sea_orm(string_value = "PROCESSING")]
    Processing,
    #[sea_orm(string_value = "SHIPPED")]
    Shipped,
    #[sea_orm(string_value = "RECEIVED")]
    Received,
    #[sea_orm(string_value = "CANCELLED")]
    Cancelled,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "room_type_enum")]
pub enum RoomTypeEnum {
    #[sea_orm(string_value = "SINGLE")]
    Single,
    #[sea_orm(string_value = "DOUBLE")]
    Double,
    #[sea_orm(string_value = "SUITE")]
    Suite,
    #[sea_orm(string_value = "ICU")]
    Icu,
    #[sea_orm(string_value = "EMERGENCY")]
    Emergency,
    #[sea_orm(string_value = "PEDIATRIC")]
    Pediatric,
    #[sea_orm(string_value = "MATERNITY")]
    Maternity,
    #[sea_orm(string_value = "SURGICAL")]
    Surgical,
    #[sea_orm(string_value = "RECOVERY")]
    Recovery,
    #[sea_orm(string_value = "ISOLATION")]
    Isolation,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "staff_role_enum")]
pub enum StaffRoleEnum {
    #[sea_orm(string_value = "DOCTOR")]
    Doctor,
    #[sea_orm(string_value = "NURSE")]
    Nurse,
    #[sea_orm(string_value = "ADMIN")]
    Admin,
    #[sea_orm(string_value = "TECHNICIAN")]
    Technician,
    #[sea_orm(string_value = "RECEPTIONIST")]
    Receptionist,
    #[sea_orm(string_value = "CLEANER")]
    Cleaner,
    #[sea_orm(string_value = "SECURITY")]
    Security,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "gender_enum"
)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum GenderEnum {
    #[sea_orm(string_value = "MALE")]
    Male,
    #[sea_orm(string_value = "FEMALE")]
    Female,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "blood_type_enum"
)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum BloodTypeEnum {
    #[sea_orm(string_value = "A_POSITIVE")]
    APositive,
    #[sea_orm(string_value = "A_NEGATIVE")]
    ANegative,
    #[sea_orm(string_value = "B_POSITIVE")]
    BPositive,
    #[sea_orm(string_value = "B_NEGATIVE")]
    BNegative,
    #[sea_orm(string_value = "AB_POSITIVE")]
    #[serde(rename = "AB_POSITIVE")]
    ABPositive,
    #[sea_orm(string_value = "AB_NEGATIVE")]
    #[serde(rename = "AB_NEGATIVE")]
    ABNegative,
    #[sea_orm(string_value = "O_POSITIVE")]
    OPositive,
    #[sea_orm(string_value = "O_NEGATIVE")]
    ONegative,
}
